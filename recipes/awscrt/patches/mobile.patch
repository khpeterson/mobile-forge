diff --git a/setup.py b/setup.py
index df0ff03..b996714 100644
--- a/setup.py
+++ b/setup.py
@@ -136,7 +136,7 @@ class AwsLib:
 # The extension depends on these libs.
 # They're built along with the extension.
 AWS_LIBS = []
-if sys.platform != 'darwin' and sys.platform != 'win32':
+if sys.platform != 'darwin' and sys.platform != 'ios' and sys.platform != 'win32':
     if not using_system_libcrypto():
         # aws-lc produces libcrypto.a
         AWS_LIBS.append(AwsLib('aws-lc', libname='crypto'))
@@ -291,6 +291,10 @@ class bdist_wheel_abi3(bdist_wheel):
             return "cp311", "abi3", plat
 
         return python, abi, plat
+    def run(self):
+        os.environ['CXX'] = os.environ['CC']
+        # continue with normal build_ext.run()
+        super().run()
 
 
 def awscrt_ext():
@@ -317,6 +321,9 @@ def awscrt_ext():
     elif sys.platform == 'darwin':
         extra_link_args += ['-framework', 'Security']
 
+    elif sys.platform == 'ios':
+        extra_link_args += ['-framework', 'Security']
+
     else:  # unix
         # linker will prefer shared libraries over static if it can find both.
         # force linker to choose static variant by using using
@@ -362,6 +369,8 @@ def awscrt_ext():
             if not is_macos_universal2():
                 if sys.platform == 'darwin':
                     extra_link_args += ['-Wl,-fatal_warnings']
+                elif sys.platform == 'ios':
+                    extra_link_args += ['-Wl,-fatal-warnings']
                 elif 'bsd' in sys.platform:
                     extra_link_args += ['-Wl,-fatal-warnings']
                 else:
